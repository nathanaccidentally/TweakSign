#!/bin/bash

# Welcome to TweakSign, a new way to sign tweaks and verify their security. Built by nathanaccidentally.
# Copyright (c) 2017 Nathan Goodwin and licensed under the MIT licinse.
# These lines must be included in any forks or redistributions and this project may not be claimed as your own.

echo "Checking if you have dpkg installed..."
if dpkg --help >/dev/null ; then
    echo "Dpkg is installed. Will finish process."
else
    echo "Dpkg is not installed and is required for TweakSign to work properly. Please install and try again."
    exit
fi

if [ -n "$1" ]; then
    echo "Recieved file from input. Extracting...";
    cd ~/Desktop/
    mkdir TempTweaksignFolder
    cd TempTweaksignFolder
    mkdir DEBIAN
    dpkg -e $1 DEBIAN
    echo "Extracted deb file."
else
    echo "No deb file recieved. Assuming you're in signed tweak folder.";
fi

if [ -n "$2" ]; then
    echo "Sorry, TweakSign currently doesn't support verifying more than 1 deb package at a time.";
fi

echo "Verifying signature of package..."

doesSigExists="DEBIAN/signature"
if [ -f "$doesSigExists" ]
then
	echo "Signature found."
else
	echo "Signature not found."
	exit
fi

KeyLineTitle="Your key = "
KeyFromSig=$(grep "$KeyLineTitle" DEBIAN/signature)
grep "$KeyLineTitle" DEBIAN/signature >/dev/null

echo -n "This is the key I got from the signature: $KeyFromSig. Would you like to continue? "
read answer
if echo "$answer" | grep -iq "^y" ;then
    echo "OK. Will keep doing verification."
else
    echo "Quitting."
    exit
fi

controlMD5LineTitle="Control MD5: "
controlmd5FromSig=$(grep "$controlMD5LineTitle" DEBIAN/signature)
currentControlMd5FromSystem=$(md5 DEBIAN/control)
grep "$controlMD5LineTitle" DEBIAN/signature

if [[ "$controlmd5FromSig" =~ "$currentControlMd5FromSystem" ]]; then
	echo "Valid Control MD5..."
else
	echo "⚠️ Invalid Control MD5.⚠️ "
	exit
fi

controlSHA256LineTitle="Control SHA256: "
controlSHA256FromSig=$(grep "$controlSHA256LineTitle" DEBIAN/signature)
currentControlSHA256FromSystem=$(shasum -a 256 DEBIAN/control)
grep "$controlSHA256LineTitle" DEBIAN/signature

if [[ "$controlSHA256FromSig" =~ "$currentControlSHA256FromSystem" ]]; then
	echo "Valid Control SHA256..."
else
	echo "⚠️ Invalid Control SHA256.⚠️ "
	exit
fi

    checkForPostinst="DEBIAN/postinst"
    if [ -f "$checkForPostinst" ]
    then

    postinstMD5LineTitle="Postinst MD5: "
    postinstmd5FromSig=$(grep "$postinstMD5LineTitle" DEBIAN/signature)
    currentPostinstMd5FromSystem=$(md5 DEBIAN/postinst)
    grep "$postinstMD5LineTitle" DEBIAN/signature
    
    if [[ "$postinstmd5FromSig" =~ "$currentPostinstMd5FromSystem" ]]; then
    	echo "Valid Postinst MD5..."
    else
    	echo "⚠️ Invalid Postinst MD5.⚠️ "
    	exit
    fi


    postinstSHA256LineTitle="Postinst SHA256: "
    postinstSHA256FromSig=$(grep "$postinstSHA256LineTitle" DEBIAN/signature)
    currentPostinstSHA256FromSystem=$(shasum -a 256 DEBIAN/postinst)
    grep "$postinstSHA256LineTitle" DEBIAN/signature
    
    if [[ "$postinstSHA256FromSig" =~ "$currentPostinstSHA256FromSystem" ]]; then
    	echo "Valid Postinst SHA256..."
    else
    	echo "⚠️ Invalid Postinst SHA256.⚠️ "
    	exit
    fi
else
	echo "Postinst script not found."
fi

    checkForExtrainst="DEBIAN/extrainst_"
    if [ -f "$checkForExtrainst" ]
    then

    extrainstMD5LineTitle="extrainst_ MD5: "
    extrainstmd5FromSig=$(grep "$extrainstMD5LineTitle" DEBIAN/signature)
    currentExtrainstMd5FromSystem=$(md5 DEBIAN/extrainst_)
    grep "$extrainstMD5LineTitle" DEBIAN/signature
    
    if [[ "$extrainstmd5FromSig" =~ "$currentExtrainstMd5FromSystem" ]]; then
        echo "Valid extrainst_ MD5..."
    else
        echo "⚠️ Invalid extrainst_ MD5.⚠️ "
        exit
    fi


    extrainstSHA256LineTitle="extrainst_ SHA256: "
    extainstSHA256FromSig=$(grep "$extrainstSHA256LineTitle" DEBIAN/signature)
    currentExtrainstSHA256FromSystem=$(shasum -a 256 DEBIAN/extrainst_)
    grep "$extrainstSHA256LineTitle" DEBIAN/signature
    
    if [[ "$extrainstSHA256FromSig" =~ "$currentExtrainstSHA256FromSystem" ]]; then
        echo "Valid extrainst_ SHA256..."
    else
        echo "⚠️ Invalid extrainst_ SHA256.⚠️ "
        exit
    fi
else
    echo "extrainst_ script not found."
fi

echo "Trying to verify .xm files..."
find . -name '*.xm' -exec md5 {} \;
echo -n "Do these hashes look right? I can't verify them automatically (y / n) "
read answer
if echo "$answer" | grep -iq "^y" ;then
    echo "OK. Done."
else
    echo "Quitting."
    exit
fi

echo "All done with checking! Running cleanup."
if [ -n "$1" ]; then
    cd ~/Desktop
    rm -r TempTweaksignFolder
else
    echo "Nothing to clean up.";
fi